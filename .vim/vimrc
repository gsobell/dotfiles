syntax on
autocmd BufEnter * colorscheme default
autocmd BufEnter *.md colorscheme nord
autocmd BufEnter *.tex colorscheme nord
filetype on
filetype plugin on

set foldmethod=marker
set wrap linebreak
set mouse=a
set showcmd
set expandtab
set autoindent
set smartindent
set smarttab
set smartcase
set ignorecase
set incsearch
set hlsearch
let g:clipbrdDefaultReg = '+'
set showmatch
set noerrorbells
set belloff=all
"set termguicolors
set number relativenumber
set undodir=~/.vim/undodir
set undofile
set wildmenu
set wildmode=list:longest,full
set backup
set backupdir=~/.vim/backup
set directory=~/.vim/tmp
source $VIMRUNTIME/vimrc_example.vim
"inoremap { {}<ESC>ha
"inoremap \" \""<ESC>ha
"inoremap { {}<ESC>ha

:nmap <c-s> :w<CR>
:imap <c-s> <Esc>:w<CR>a

inoremap ] ]<ESC>ha
inoremap ) )<ESC>ha
autocmd BufEnter *.md setlocal spell
autocmd BufEnter *.md set spelllang=nl,en_us
autocmd BufEnter *.md inoremap <C-l> <c-g>u<Esc>[s1z=`]a<c-g>u

set clipboard=unnamedplus

au BufRead /tmp/mutt-* set tw=72

"Portable basic LaTeX highlighting, in lieu of a plugin 
function s:math()
	syntax region Statement oneline matchgroup=Delimiter start="\$" end="\$" contains=Statement
	syntax region Statement matchgroup=Delimiter start="{" end="}" contains=Statement
	syntax region Statement matchgroup=Delimiter start="\\begin{.*}" end="\\end{.*}" contains=Constant
endfunction

set showmatch

autocmd BufNewFile,BufReadPre,BufRead *.md setfiletype markdown
autocmd Filetype markdown setlocal com=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,b:- | set formatoptions=tcroqln
autocmd FileType markdown :call <SID>math()
autocmd FileType markdown set norelativenumber number
autocmd FileType markdown inoremap $ $$<ESC>ha

set directory=$XDG_CACHE_HOME/vim,~/,/tmp
set viminfo+=n$XDG_CACHE_HOME/vim/viminfo
set backupdir=$XDG_CACHE_HOME/vim,~/,/tmp
